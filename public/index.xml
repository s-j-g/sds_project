<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Portfolio</title>
    <link>/</link>
    <description>Recent content on Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 14 May 2020 22:55:05 -0400</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About Me</title>
      <link>/about/</link>
      <pubDate>Thu, 14 May 2020 22:55:05 -0400</pubDate>
      
      <guid>/about/</guid>
      <description>About Me Hello, my name is Sally Jung! I’m pursuing a B.S. in Environmental Science with a focus in biology and a B.A. in Geography at the University of Texas at Austin. My interests are in ecology, ecological restoration, conservation, and water resources. I’m currently a project leader for UT Microfarm and last summer I worked as an undergraduate research intern through the NSF REU program at the Jornada LTER site.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/projects/</link>
      <pubDate>Thu, 14 May 2020 22:55:05 -0400</pubDate>
      
      <guid>/projects/</guid>
      <description>Projects Here are some projects I have recently completed:
  Exploratory Data Analysis with Tidyverse Tools
  Modeling, Testing, and Classification
  </description>
    </item>
    
    <item>
      <title>Intro to Python</title>
      <link>/blog/python/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/python/</guid>
      <description>A glimpse into some python tools I have learned in my Computational Biology course.
R and Python Interaction Reticulate package allows R and Python to interact with each other.
# R code library(reticulate) la&amp;lt;-&amp;quot;indian&amp;quot; # Python code import re la=&amp;quot;blanket&amp;quot; # R code: access R-defined objects with r cat(c(la,py$la)) ## indian blanket # Python code: access Python-defined objects with py$ print(r.la,la) ## indian blanket  Regular Expressions (regex) Regular Expressions search for defined patterns in a block of text.</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/blog/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/blog/2015-07-23-r-rmarkdown/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>Project 1</title>
      <link>/jung_project1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/jung_project1/</guid>
      <description># Data sets setwd(&amp;quot;/Users/SJ/Desktop&amp;quot;) dune &amp;lt;- read.csv(&amp;quot;GrassIOF_Dune_Data_sds.csv&amp;quot;) grass &amp;lt;- read.csv(&amp;quot;GrassIOF_Grass_Data_sds.csv&amp;quot;) head(dune) ## Plant Month Day Year Treatment Plot Quadrat D_Height D_X D_Y ## 1 1 7 18 2019 1 2 7 0.0 0.0 0.0 ## 2 2 7 18 2019 1 2 7 5.0 23.0 38.0 ## 3 3 7 19 2019 1 2 7 4.6 11.4 11.8 ## 4 4 7 19 2019 1 2 7 0.0 0.0 0.</description>
    </item>
    
    <item>
      <title>Project 2: Modeling, Testing, and Predicting</title>
      <link>/jung_project2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/jung_project2/</guid>
      <description>#0. Dataset setwd(&amp;quot;/Users/SJ/Desktop&amp;quot;) iof &amp;lt;- read.csv(&amp;quot;LTREB2_GrassIOF_DataV2.csv&amp;quot;) iof &amp;lt;- iof %&amp;gt;% mutate(D_Area = pi*(D_X/2)*(D_Y/2)) %&amp;gt;% mutate(G_Area = pi*(G_X/2)*(G_Y/2)) %&amp;gt;% select(Treatment, D_Area, D_Height, G_Area, G_Height) %&amp;gt;% mutate(y=ifelse(iof$Treatment==3,F,T)) %&amp;gt;% mutate(Treatment= recode(Treatment,&amp;quot;T1&amp;quot;,&amp;quot;T2&amp;quot;,&amp;quot;T3&amp;quot;,&amp;quot;T4&amp;quot;,&amp;quot;T5&amp;quot;)) head(iof) ## Treatment D_Area D_Height G_Area G_Height y ## 1 T1 0.00000 0.0 11.62389 6.8 TRUE ## 2 T1 686.43799 5.0 368.03758 8.0 TRUE ## 3 T1 105.65176 4.6 48.38053 1.4 TRUE ## 4 T1 0.00000 0.0 12.01659 3.0 TRUE ## 5 T1 129.</description>
    </item>
    
  </channel>
</rss>